---
- name: assert required variables are set and have reasonable values
  assert:
    that:
    - (oauth_olafnorge_de_labels | length) > 0
    - (oauth_olafnorge_de_network_definitions | length) > 0
    - (oauth_olafnorge_de_networks | length) > 0
    - oauth_olafnorge_de_environment is defined
    - oauth_olafnorge_de_environment.app_key is defined
    - (oauth_olafnorge_de_environment.app_key | length) > 0
    - oauth_olafnorge_de_environment.db_password is defined
    - (oauth_olafnorge_de_environment.db_password | length) > 0
    - oauth_olafnorge_de_environment.rollbar_enabled is defined
    - (not (oauth_olafnorge_de_environment.rollbar_enabled)) or
      (
        (oauth_olafnorge_de_environment.rollbar_enabled) and
        (oauth_olafnorge_de_environment.rollbar_token is defined) and
        ((oauth_olafnorge_de_environment.rollbar_token | length) > 0)
      )

- name: create secrets for oauth.example.com
  docker_secret:
    data: "{{ item.value.data }}"
    name: "{{ item.value.name }}"
    state: present
  no_log: yes
  with_dict: "{{ oauth_olafnorge_de_secrets }}"
  when: oauth_olafnorge_de_use_secrets

- name: write crontab skeleton
  template:
    dest: "{{ oauth_olafnorge_de_crontab_path }}"
    mode: 0600
    src: crontab.j2
  register: oauth_olafnorge_de_crontab_templated

- name: register dynamic name of crontab skeleton
  set_fact:
    oauth_olafnorge_de_configs_dict: "{'oauth-crontab-{{ oauth_olafnorge_de_crontab_templated.checksum[:10] }}':{'file':'{{ oauth_olafnorge_de_crontab_path }}'}}"

- name: spawn oauth.example.com service
  docker_stack:
    compose:
      - "{{ oauth_olafnorge_de_compose }}"
    name: "{{ oauth_olafnorge_de_name }}"
    prune: yes
    state: present
